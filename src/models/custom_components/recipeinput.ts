/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type RecipeInput = {
  /**
   * Name of the recipe
   */
  name: string;
  /**
   * List of ingredients
   */
  ingredients: Array<string>;
  /**
   * Cooking instructions for the recipe
   */
  instructions: string;
  /**
   * Number of servings
   */
  servings?: number | undefined;
  /**
   * Preparation time in minutes
   */
  prepTime?: number | undefined;
};

/** @internal */
export const RecipeInput$inboundSchema: z.ZodType<
  RecipeInput,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  ingredients: z.array(z.string()),
  instructions: z.string(),
  servings: z.number().int().optional(),
  prepTime: z.number().int().optional(),
});

/** @internal */
export type RecipeInput$Outbound = {
  name: string;
  ingredients: Array<string>;
  instructions: string;
  servings?: number | undefined;
  prepTime?: number | undefined;
};

/** @internal */
export const RecipeInput$outboundSchema: z.ZodType<
  RecipeInput$Outbound,
  z.ZodTypeDef,
  RecipeInput
> = z.object({
  name: z.string(),
  ingredients: z.array(z.string()),
  instructions: z.string(),
  servings: z.number().int().optional(),
  prepTime: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipeInput$ {
  /** @deprecated use `RecipeInput$inboundSchema` instead. */
  export const inboundSchema = RecipeInput$inboundSchema;
  /** @deprecated use `RecipeInput$outboundSchema` instead. */
  export const outboundSchema = RecipeInput$outboundSchema;
  /** @deprecated use `RecipeInput$Outbound` instead. */
  export type Outbound = RecipeInput$Outbound;
}
