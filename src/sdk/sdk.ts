/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { createRecipe } from "../funcs/createRecipe.js";
import { deleteRecipe } from "../funcs/deleteRecipe.js";
import { getRecipeById } from "../funcs/getRecipeById.js";
import { getRecipes } from "../funcs/getRecipes.js";
import { updateRecipe } from "../funcs/updateRecipe.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class SpeakeasyRecipeBook extends ClientSDK {
  /**
   * Get all recipes
   */
  async getRecipes(
    options?: RequestOptions,
  ): Promise<Array<components.Recipe>> {
    return unwrapAsync(getRecipes(
      this,
      options,
    ));
  }

  /**
   * Create a new recipe
   */
  async createRecipe(
    request: components.RecipeInput,
    options?: RequestOptions,
  ): Promise<components.Recipe> {
    return unwrapAsync(createRecipe(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a recipe by ID
   */
  async getRecipeById(
    request: operations.GetRecipeByIdRequest,
    options?: RequestOptions,
  ): Promise<components.Recipe> {
    return unwrapAsync(getRecipeById(
      this,
      request,
      options,
    ));
  }

  /**
   * Update an existing recipe by ID
   */
  async updateRecipe(
    request: operations.UpdateRecipeRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(updateRecipe(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a recipe by ID
   */
  async deleteRecipe(
    request: operations.DeleteRecipeRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(deleteRecipe(
      this,
      request,
      options,
    ));
  }
}
