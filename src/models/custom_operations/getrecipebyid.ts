/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type GetRecipeByIdRequest = {
  recipeId: string;
};

/** @internal */
export const GetRecipeByIdRequest$inboundSchema: z.ZodType<
  GetRecipeByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  recipeId: z.string(),
});

/** @internal */
export type GetRecipeByIdRequest$Outbound = {
  recipeId: string;
};

/** @internal */
export const GetRecipeByIdRequest$outboundSchema: z.ZodType<
  GetRecipeByIdRequest$Outbound,
  z.ZodTypeDef,
  GetRecipeByIdRequest
> = z.object({
  recipeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetRecipeByIdRequest$ {
  /** @deprecated use `GetRecipeByIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetRecipeByIdRequest$inboundSchema;
  /** @deprecated use `GetRecipeByIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetRecipeByIdRequest$outboundSchema;
  /** @deprecated use `GetRecipeByIdRequest$Outbound` instead. */
  export type Outbound = GetRecipeByIdRequest$Outbound;
}
